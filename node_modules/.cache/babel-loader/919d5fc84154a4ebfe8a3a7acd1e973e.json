{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { addToCart } from '../components/utils/cart'; // ACTIONS\n\nconst GET_PRODUCTS = \"GET_PRODUCTS\";\nconst SHOW_MODAL_ADD_TO_CARD = 'SHOW_MODAL_ADD_TO_CARD';\nconst SHOW_MODAL_DELETE = 'SHOW_MODAL_DELETE';\nconst FAVORITE_PRODUCT = 'FAVORITE_PRODUCT';\nconst MODAL_CLOSE = 'MODAL_CLOSE';\nconst MODAL_CONFIRM = 'MODAL_CONFIRM'; // REDUCER\n\nconst initialState = {\n  products: [],\n  modalProductId: null,\n  modalDeleteID: null,\n  favoriteProduct: null,\n  modalDelete: null\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return { ...state,\n        product: action.payload\n      };\n\n    case SHOW_MODAL_ADD_TO_CARD:\n      return { ...state,\n        modalProductId: action.payload\n      };\n\n    case MODAL_CLOSE:\n      return { ...state,\n        modalProductId: null\n      };\n\n    case MODAL_CONFIRM:\n      return { ...state,\n        modalProductId: state.modalProductId\n      };\n\n    case FAVORITE_PRODUCT:\n      return { ...state,\n        favoriteProduct: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const getProducts = payload => ({\n  type: GET_PRODUCTS,\n  payload\n});\nexport const showModalAddToCard = payload => ({\n  type: SHOW_MODAL_ADD_TO_CARD,\n  payload\n});\nexport const modalClose = () => ({\n  type: MODAL_CLOSE\n}); // export const modalConfirm = (payload) => ({\n//     type: MODAL_CONFIRM,\n//     payload\n// });\n\nexport const favoriteProduct = payload => ({\n  type: FAVORITE_PRODUCT,\n  payload\n}); // MIDDLEWARE\n\nexport const getProductList = () => async dispatch => {\n  const res = await fetch('cardProduct.json');\n  const data = await res.json();\n  dispatch(getProducts(data));\n}; // export const showModalAddToCard = (productId) => (dispatch) => {\n//     dispatch(showModalAddToCard(productId))\n// }\n\nexport const modalConfirmAddToCart = productId => dispatch => {\n  addToCart(productId);\n  alert(1);\n  dispatch(modalClose());\n};\nconst store = createStore(reducer, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"sources":["/home/vadim/Documents/OLHA/DAN_IT/HomeWork/React/4_React_Redux/src/store/index.js"],"names":["createStore","applyMiddleware","thunk","addToCart","GET_PRODUCTS","SHOW_MODAL_ADD_TO_CARD","SHOW_MODAL_DELETE","FAVORITE_PRODUCT","MODAL_CLOSE","MODAL_CONFIRM","initialState","products","modalProductId","modalDeleteID","favoriteProduct","modalDelete","reducer","state","action","type","product","payload","getProducts","showModalAddToCard","modalClose","getProductList","dispatch","res","fetch","data","json","modalConfirmAddToCart","productId","alert","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAG,eAAtB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,cAAc,EAAE,IAFC;AAGjBC,EAAAA,aAAa,EAAE,IAHE;AAIjBC,EAAAA,eAAe,EAAE,IAJA;AAKjBC,EAAAA,WAAW,EAAE;AALI,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAK,GAAGP,YAAzB,EAAuCQ,MAAvC,EAA+C;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,YAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAFb,OAAP;;AAIJ,SAAKhB,sBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHL,QAAAA,cAAc,EAAEM,MAAM,CAACG;AAFpB,OAAP;;AAIJ,SAAKb,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,cAAc,EAAE;AAFb,OAAP;;AAIJ,SAAKH,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,cAAc,EAAEK,KAAK,CAACL;AAFnB,OAAP;;AAIJ,SAAKL,gBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,eAAe,EAAEI,MAAM,CAACG;AAFrB,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AA3BR;AA6BH;;AAED,OAAO,MAAMK,WAAW,GAAID,OAAD,KAAc;AACrCF,EAAAA,IAAI,EAAEf,YAD+B;AAErCiB,EAAAA;AAFqC,CAAd,CAApB;AAKP,OAAO,MAAME,kBAAkB,GAAIF,OAAD,KAAc;AAC5CF,EAAAA,IAAI,EAAEd,sBADsC;AAE5CgB,EAAAA;AAF4C,CAAd,CAA3B;AAKP,OAAO,MAAMG,UAAU,GAAG,OAAO;AAC7BL,EAAAA,IAAI,EAAEX;AADuB,CAAP,CAAnB,C,CAIP;AACA;AACA;AACA;;AAEA,OAAO,MAAMM,eAAe,GAAIO,OAAD,KAAc;AACzCF,EAAAA,IAAI,EAAEZ,gBADmC;AAEzCc,EAAAA;AAFyC,CAAd,CAAxB,C,CAKP;;AAEA,OAAO,MAAMI,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAJ,EAAAA,QAAQ,CAACJ,WAAW,CAACO,IAAD,CAAZ,CAAR;AACH,CAJM,C,CAMP;AACA;AACA;;AAEA,OAAO,MAAME,qBAAqB,GAAIC,SAAD,IAAgBN,QAAD,IAAc;AAC9DvB,EAAAA,SAAS,CAAC6B,SAAD,CAAT;AACAC,EAAAA,KAAK,CAAC,CAAD,CAAL;AACAP,EAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACH,CAJM;AASP,MAAMU,KAAK,GAAGlC,WAAW,CAACgB,OAAD,EAAUf,eAAe,CAACC,KAAD,CAAzB,CAAzB;AAEA,eAAegC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { addToCart } from '../components/utils/cart';\n\n// ACTIONS\n\nconst GET_PRODUCTS = \"GET_PRODUCTS\";\nconst SHOW_MODAL_ADD_TO_CARD = 'SHOW_MODAL_ADD_TO_CARD';\nconst SHOW_MODAL_DELETE = 'SHOW_MODAL_DELETE'\nconst FAVORITE_PRODUCT = 'FAVORITE_PRODUCT';\n\nconst MODAL_CLOSE = 'MODAL_CLOSE';\nconst MODAL_CONFIRM = 'MODAL_CONFIRM';\n\n// REDUCER\n\nconst initialState = {\n    products: [],\n    modalProductId: null,\n    modalDeleteID: null,\n    favoriteProduct: null,\n    modalDelete: null\n}\n\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_PRODUCTS:\n            return {\n                ...state,\n                product: action.payload\n            }\n        case SHOW_MODAL_ADD_TO_CARD:\n            return {\n                ...state,\n                modalProductId: action.payload\n            }\n        case MODAL_CLOSE:\n            return {\n                ...state,\n                modalProductId: null\n            }\n        case MODAL_CONFIRM:\n            return {\n                ...state,\n                modalProductId: state.modalProductId\n            }\n        case FAVORITE_PRODUCT:\n            return {\n                ...state,\n                favoriteProduct: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const getProducts = (payload) => ({\n    type: GET_PRODUCTS,\n    payload\n});\n\nexport const showModalAddToCard = (payload) => ({\n    type: SHOW_MODAL_ADD_TO_CARD,\n    payload\n});\n\nexport const modalClose = () => ({\n    type: MODAL_CLOSE\n});\n\n// export const modalConfirm = (payload) => ({\n//     type: MODAL_CONFIRM,\n//     payload\n// });\n\nexport const favoriteProduct = (payload) => ({\n    type: FAVORITE_PRODUCT,\n    payload\n});\n\n// MIDDLEWARE\n\nexport const getProductList = () => async (dispatch) => {\n    const res = await fetch('cardProduct.json');\n    const data = await res.json();\n    dispatch(getProducts(data));\n}\n\n// export const showModalAddToCard = (productId) => (dispatch) => {\n//     dispatch(showModalAddToCard(productId))\n// }\n\nexport const modalConfirmAddToCart = (productId) => (dispatch) => {\n    addToCart(productId)\n    alert(1)\n    dispatch(modalClose())\n}\n\n\n\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}